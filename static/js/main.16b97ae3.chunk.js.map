{"version":3,"sources":["components/FilterItem/FilterItem.module.css","components/List/List.module.css","components/Home/Home.module.css","components/App/App.module.css","components/Form/Form.module.css","components/IngredienceFormGroup/IngredienceFormGroup.module.css","components/StepFormGroup/StepFormGroup.module.css","components/Detail/Detail.module.css","components/Home/Home.js","serviceWorker.js","api.js","components/FilterItem/FilterItem.js","components/Filter/Filter.js","components/IngredienceFormGroup/IngredienceFormGroup.js","components/StepFormGroup/StepFormGroup.js","components/Form/Form.js","components/Detail/Detail.js","components/List/List.js","components/App/App.js","index.js"],"names":["module","exports","React","Component","Boolean","window","location","hostname","match","parse","data","JSON","content","callApi","path","a","fetch","response","json","getFoods","name","getByCategory","categories","filter","d","includes","Category","getFilterList","FilterItem","props","choice","createRef","area","showChoice","bind","hideChoice","document","addEventListener","e","current","contains","target","classlist","this","classList","remove","add","category","ingredience","f","getElementsByClassName","Array","prototype","slice","call","getElementsByTagName","checked","map","getAttribute","then","len","length","n","forEach","i","Ingrediences","x","Name","getByIngredience","update","ref","type","placeholder","onClick","id","className","styles","list","item","data-name","onChange","Filter","load","state","ingrediences","setState","search","IngredienceFormGroup","index","handleChange","data-id","value","Amount","Unit","icon","faTimes","defaultProps","StepFormGroup","step","Form","handleSubmit","handleSave","handleChangeIngredience","handleChangeStep","addIngredienceField","removeIngredienceField","addStepField","removeStepField","obj","localStorage","getItem","food","description","Description","steps","Steps","preventDefault","message","sendFormData","history","push","console","log","parseInt","amount","unit","splice","desc","pop","exist","setTimeout","stringify","requestOptions","method","headers","body","undefined","toString","s","Desc","faPlus","faMinus","Detail","getDetail","params","setItem","to","List","handleRemove","foods","removeFood","prevProps","scope","App","go","data-toggle","data-target","aria-controls","aria-expanded","aria-label","component","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.16b97ae3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"choice\":\"FilterItem_choice__GwWFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredience\":\"List_ingredience__2jTjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__oeVgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__zNe5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FoodForm\":\"Form_FoodForm__3UX9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IngredienceFormGroup\":\"IngredienceFormGroup_IngredienceFormGroup__3U5b1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StepFormGroup\":\"StepFormGroup_StepFormGroup__O1k5K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FoodDetail\":\"Detail_FoodDetail__TSi04\"};","import React from 'react';\nimport styles from './Home.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Home extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n            message: null,\n        }\n        this.getJson();\n    }\n\n    async getJson(){\n        fetch(\"/food\")\n            .then(async response => {\n                const data = await response.json();\n                console.log(data);\n                const m = data.message;\n                console.log(m);\n                this.setState({message: m});\n            });\n    }\n\n    render(){\n        return (\n            <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-4\">Polévky</div>\n                    <div className=\"col-4\">Hlavní jídla</div>\n                    <div className=\"col-4\">Dezerty</div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const parse = (data) => {\r\n    return JSON.parse(data.content)\r\n}\r\n\r\nexport async function callApi(path){\r\n    /*fetch(path)\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            //console.log(\"JSON: \" + data.content);\r\n            return data.content;\r\n        });*/\r\n    let response = await fetch(path);\r\n    let data = await response.json()\r\n    return data;\r\n}\r\n\r\n/** Geters **/\r\nexport async function getFoods(){\r\n    let data = await callApi(\"/food\");\r\n    return parse(data);\r\n}\r\n\r\nexport async function getDetail(name){\r\n    let data = await callApi(\"/detail/\"+ name);\r\n    return parse(data);\r\n}\r\n\r\n/**Filter functions **/\r\n\r\nexport function getByName(data, name){\r\n    return data.forEach( d => {\r\n        if(d.Name == name)\r\n            return d;\r\n    })\r\n}\r\n\r\nexport function getByCategory(data, categories){\r\n    return data.filter(d => {\r\n        if(categories.includes(d.Category))\r\n            return d;\r\n    })\r\n}\r\n\r\nexport function getByIngredience(data, ingredience){\r\n    let len = ingredience.length;\r\n    return data.filter(d => {\r\n        var n = 0;\r\n        ingredience.forEach(i => {\r\n            if(d.Ingrediences.map(x => x.Name).includes(i))\r\n                n++;\r\n        })\r\n        if(n == len)\r\n            return d;\r\n    })\r\n}\r\n\r\nexport async function removeFood(name){\r\n    let data = await callApi(\"/delete/\"+ name);\r\n    return data;\r\n}\r\n\r\nexport async function getFilterList(name){\r\n    let data = await callApi(\"/filter/\" + name)\r\n    return data.content;\r\n}\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FilterItem.module.css';\nimport {getByCategory, getByName, getByIngredience, getFoods} from \"../../api\";\n\nclass FilterItem extends React.Component{\n    constructor(props) {\n        super(props);\n        this.choice = React.createRef();\n        this.area = React.createRef();\n        this.showChoice = this.showChoice.bind(this);\n        this.hideChoice = this.hideChoice.bind(this);\n        this.filter = this.filter.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mouseover', (e) => {\n            if(this.area && !this.area.current.contains(e.target))\n                this.hideChoice(e);\n        });\n    }\n\n    showChoice(e){\n        const classlist = this.choice.current.classList\n        if(classlist.contains(\"invisible\"))\n            classlist.remove(\"invisible\");\n        else\n            this.hideChoice(e);\n    }\n\n    hideChoice(e){\n        this.filter(e);\n        this.choice.current.classList.add(\"invisible\");\n    }\n\n    filter(e){\n        let f = document.getElementsByClassName(\"filter\");\n        let category, ingredience, name = null;\n        category = Array.prototype.slice.call(f[0].getElementsByTagName(\"input\")).filter(e => e.checked).map(e => e.getAttribute(\"data-name\"));\n        ingredience = Array.prototype.slice.call(f[1].getElementsByTagName(\"input\")).filter(e => e.checked).map(e => e.getAttribute(\"data-name\"));\n        getFoods().then(data => {\n            if (name != null)\n                data = getByName(data, name);\n            if (category != null)\n                data = getByCategory(data, category);\n            if (ingredience != null)\n                data = getByIngredience(data, ingredience);\n            this.props.update(data);\n            return data;\n        })\n    }\n\n    render() {\n        return (\n            <div ref={this.area}>\n                <input type=\"text\" placeholder={this.props.name} onClick={this.showChoice}/>\n                    <div id=\"filter\" className={styles.choice + \" invisible filter\"} ref={this.choice}>\n                        {\n                            this.props.list != null &&\n                            this.props.list.map(item => {\n                                return(\n                                    <div className=\"form-check\">\n                                        <input data-name={item} type=\"checkbox\" className=\"form-check-input\" onChange={this.filter}/>\n                                        <label className=\"form-check-label\">{item}</label>\n                                    </div>\n                                );\n                            })\n                        }\n\n                        <button className=\"btn btn-sm btn-outline-success float-right\" onClick={this.hideChoice}>Zobrazit</button>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default FilterItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport FilterItem from \"../FilterItem/FilterItem\";\nimport {getFilterList} from \"../../api\";\n\nclass Filter extends React.Component{\n    constructor(props){\n        super(props);\n        //this.categories = React.createRef();\n        //this.ingrediences = React.createRef();\n        this.load = this.load.bind(this);\n        this.state = {\n            categories: this.props.category,\n            ingrediences: []\n        }\n        this.load();\n    }\n\n    load(){\n        getFilterList(\"category\").then( data => this.setState({categories: data}));\n        getFilterList(\"ingredience\").then( data => this.setState({ingrediences: data}));\n    }\n\n    render(){\n        return(\n            <div className=\"my-5\">\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <input type=\"text\" placeholder=\"Název\"/>\n                    </div>\n                    <div className=\"col-3\">\n                        <FilterItem list={this.state.categories} update={this.props.update} name=\"Kategorie\"/>\n                    </div>\n                    <div className=\"col-3\">\n                        <FilterItem list={this.state.ingrediences} update={this.props.update} name=\"Ingredience\"/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <button className=\"btn btn-sm btn-success mt-3\" onClick={this.props.search}>Vyhledat</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './IngredienceFormGroup.module.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nconst IngredienceFormGroup = ({ingredience, index, remove, handleChange}) => {\n    return(\n    <div className=\"form-group row\">\n        <input type=\"text\" className=\"form-control col-4\" placeholder=\"název\" data-id={index} name=\"Name\" value={ingredience.Name} onChange={handleChange}/>\n        <input type=\"text\" className=\"form-control col-3\" placeholder=\"množství\" data-id={index} name=\"Amount\" value={ingredience.Amount} onChange={handleChange}/>\n        <select className=\"form-control col-2\" data-id={index} name=\"Unit\" onChange={handleChange} value={ingredience.Unit}>\n            <option></option>\n            <option>g</option>\n            <option>ks</option>\n            <option>ml</option>\n            <option>dl</option>\n            <option>l</option>\n            <option>balíček</option>\n            <option>lžíce</option>\n            <option>lžička</option>\n        </select>\n        <button id={index} className=\"btn-sm btn-danger\" onClick={remove}><FontAwesomeIcon id={index} icon={faTimes}/></button>\n    </div>\n    )\n};\n\nIngredienceFormGroup.propTypes = {};\n\nIngredienceFormGroup.defaultProps = {};\n\nexport default IngredienceFormGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './StepFormGroup.module.css';\n\nconst StepFormGroup = ({step, id, handleChange}) => {\n    return(\n    <div className=\"form-group\">\n        <label>Krok {id+1}</label>\n        <textarea data-id={id} name=\"step\" value={step} className=\"form-control\" onChange={handleChange}/>\n    </div>)\n};\n\nStepFormGroup.propTypes = {};\n\nStepFormGroup.defaultProps = {};\n\nexport default StepFormGroup;\n","import React from 'react';\nimport styles from './Form.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPlus, faMinus} from \"@fortawesome/free-solid-svg-icons\";\nimport IngredienceFormGroup from \"../IngredienceFormGroup/IngredienceFormGroup\";\nimport StepFormGroup from \"../StepFormGroup/StepFormGroup\";\nimport {Redirect} from \"react-router-dom\";\nimport {parse} from \"@fortawesome/fontawesome-svg-core\";\n\nclass Form extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeIngredience = this.handleChangeIngredience.bind(this);\n        this.handleChangeStep = this.handleChangeStep.bind(this);\n        this.addIngredienceField = this.addIngredienceField.bind(this);\n        this.removeIngredienceField = this.removeIngredienceField.bind(this);\n        this.addStepField = this.addStepField.bind(this);\n        this.removeStepField = this.removeStepField.bind(this);\n\n        if(this.props.match.path.includes(\"edit\")){\n            var obj = JSON.parse(localStorage.getItem(\"detail\"));\n            this.state = {\n                food: {\n                    name: obj.Name,\n                    category: obj.Category,\n                    description: obj.Description,\n                    ingrediences:  obj.Ingrediences != null ? obj.Ingrediences : [],\n                    steps: obj.Steps != null ? obj.Steps : []\n                }\n            };\n        }\n        else\n            this.state = {\n                food: {\n                    name: \"\",\n                    category: \"\",\n                    description: \"\",\n                    ingrediences:  [],\n                    steps: []\n                }\n            };\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({ message: 'Sending...' }, this.sendFormData(false));\n        this.props.history.push('/list')\n    }\n    handleSave(e){\n        e.preventDefault();\n        this.setState({ message: 'Sending...' }, this.sendFormData(true));\n        this.props.history.push('/list')\n    }\n    handleChange(e){\n        console.log(e.target.name);\n        let f = this.state.food;\n        f[e.target.name] = e.target.value;\n        this.setState({food: f});\n    }\n    handleChangeIngredience(e){\n        let f = this.state.food;\n        let id = parseInt(e.target.getAttribute(\"data-id\"));\n        f.ingrediences[id][e.target.name] = e.target.value;\n        this.setState({food: f});\n    }\n    handleChangeStep(e){\n        let f = this.state.food;\n        let id = parseInt(e.target.getAttribute(\"data-id\"));\n        f.steps[id][\"Desc\"] = e.target.value;\n        this.setState({food: f});\n    }\n\n    addIngredienceField(e) {\n        let f = this.state.food;\n        f.ingrediences.push({name: \"\", amount:\"\", unit: \"\"});\n        this.setState({food: f});\n    }\n    removeIngredienceField(e){\n        console.log(e.target.id);\n        let f = this.state.food;\n        f.ingrediences.splice(parseInt(e.target.id), 1);\n        this.setState({food: f});\n    }\n\n    addStepField(e){\n        let f = this.state.food;\n        f.steps.push({desc:\"\"});\n        this.setState({food: f});\n    }\n    removeStepField(e){\n        let f = this.state.food;\n        f.steps.pop();\n        this.setState({food: f});\n    }\n\n    sendFormData(exist) {\n        setTimeout(async () => {\n            this.setState({ message: 'data sent!' });\n            let obj = JSON.stringify(this.state.food);\n            console.log(\"BODY: \" + obj)\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: obj\n            };\n            let response = exist? await fetch(\"/update\", requestOptions) :  await fetch(\"/add\", requestOptions);\n            let data = await response.json()\n            return data;\n        }, 3000);\n    }\n\n    render(){\n        let ingredience = [], steps = [];\n        if(this.state.food.ingrediences != undefined)\n            ingredience = this.state.food.ingrediences.map( (i,x) =>\n                <IngredienceFormGroup ingredience={i} index={x.toString()} remove={this.removeIngredienceField} handleChange={this.handleChangeIngredience}/>\n                );\n        if(this.state.food.steps != undefined)\n            steps = this.state.food.steps.map((s,i) => { return(<StepFormGroup step={s.Desc} id={i} handleChange={this.handleChangeStep}/>)});\n\n        return(\n        <div>\n                <div className=\"form-group row\">\n                    <label className=\"col-2\">Název</label>\n                    <div className=\"col-10\">\n                        <input type=\"text\" className=\"form-control\" name=\"Name\" onChange={this.handleChange} value={this.state.food.name}/>\n                    </div>\n                </div>\n\n                <fieldset className=\"form-group\">\n                    <div className=\"row\">\n                        <legend className=\"col-form-label col-sm-2 pt-0\">Radios</legend>\n                        <div className=\"col-sm-10\">\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"Category\" value=\"polévka\"  onChange={this.handleChange}\n                                       checked={this.state.food.category === \"polévka\"}/>\n                                <label className=\"form-check-label\">Polévka</label>\n                            </div>\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"Category\" value=\"hlavní\"  onChange={this.handleChange}\n                                       checked={this.state.food.category === \"hlavní\"}/>\n                                <label className=\"form-check-label\">Hlavní chod</label>\n                            </div>\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"Category\" value=\"dezert\" onChange={this.handleChange}\n                                       checked={this.state.food.category === \"dezert\"}/>\n                                <label className=\"form-check-label\">Dezert</label>\n                            </div>\n                        </div>\n                    </div>\n                </fieldset>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-2\">Popis</label>\n                    <div className=\"col-10\">\n                        <input type=\"text\" className=\"form-control\" name=\"Description\" onChange={this.handleChange} value={this.state.food.description}/>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-5\">\n                        <h3>Ingredience:</h3>\n                        {ingredience}\n                        <button className=\"btn btn-success row\" onClick={this.addIngredienceField}>\n                            <FontAwesomeIcon icon={faPlus} />\n                        </button>\n                    </div>\n                    <div className=\"col-7\">\n                        <h3>Postup:</h3>\n                        {steps}\n                        <div className=\"form-group\">\n                            <button className=\"btn btn-danger\" onClick={this.removeStepField}>\n                                <FontAwesomeIcon icon={faMinus} />\n                            </button>\n                            <button className=\"btn btn-success\" onClick={this.addStepField}>\n                                <FontAwesomeIcon icon={faPlus} />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            {this.props.match.path.includes(\"edit\") ?\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSave}>Uložit</button>\n                :\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Vytvořit</button>\n            }\n        </div>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Detail.module.css';\nimport {getDetail} from \"../../api\";\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport Form from \"../Form/Form\";\nimport List from \"../List/List\";\n\nclass Detail extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            food: {}\n        }\n        this.load = this.load.bind(this);\n        this.load();\n    }\n\n    load(){\n        getDetail(this.props.match.params.name).then(data =>{\n                this.setState({food: data});\n                localStorage.setItem(\"detail\", JSON.stringify(data));\n        })\n    }\n\n    render(){\n        return(\n          <div>\n              <h1>{this.state.food.Name}</h1>\n              <h3>{this.state.food.Category}</h3>\n              <p>{this.state.food.Description}</p>\n              <ul>\n                  {\n                      this.state.food.ingrediences != undefined &&\n                      this.state.food.ingrediences.map(i =>\n                        <li>i.name</li>\n                      )\n                  }\n              </ul>\n              <ul>\n                  {\n                      this.state.food.steps != undefined &&\n                      this.state.food.steps.map(s =>\n                          <li>s</li>\n                      )\n                  }\n              </ul>\n              <Link to={`/edit/${this.state.food.Name}`} className=\"btn btn-sm btn-outline-dark\">Upravit</Link>\n          </div>\n        );\n    }\n}\n\nexport default Detail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './List.module.css';\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport {getByCategory, getFoods, removeFood} from \"../../api\";\nimport Form from \"../Form/Form\";\nimport Detail from \"../Detail/Detail\";\nimport Filter from \"../Filter/Filter\";\n\nclass List extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.handleRemove = this.handleRemove.bind(this);\n        this.load = this.load.bind(this);\n        this.update = this.update.bind(this);\n\n        this.state = { foods: []}\n        this.load();\n    }\n\n    load(){\n        getFoods()\n            .then(data => {\n                return getByCategory(data, this.props.match.params.category);\n            })\n            .then( data => {\n                this.setState({foods: data})\n            });\n    }\n\n    handleRemove(e){\n        removeFood(e.target.getAttribute(\"data-name\"));\n        this.load();\n    }\n\n    update(data){\n        this.setState({foods: data})\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.load();\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Filter category={[\"dezerty\"]} update={this.update}/>\n                <table className=\"table\">\n                    <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">Název</th>\n                        <th scope=\"col\">Kategorie</th>\n                        <th scope=\"col\">Ingredience</th>\n                        <th scope=\"col\">Popis</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.foods != null &&\n                        this.state.foods.map(f => {\n                            return(\n                                <tr>\n                                    <td>{f.Name}</td>\n                                    <td>{f.Category}</td>\n                                    <td>\n                                        <div className=\"ingredience-list\">\n                                            {\n                                                f.Ingrediences != undefined &&\n                                                f.Ingrediences.map(i => <label className={styles.ingredience + \" btn-sm btn-info\"}>{i.Name}</label>)\n                                            }\n                                        </div>\n                                    </td>\n                                    <td>{f.Description}</td>\n                                    <td>\n                                        <Link to={`/detail/${f.Name}`} className=\"btn btn-sm btn-outline-dark\">Detail</Link>\n                                        <button data-name={f.Name} className=\"btn btn-sm btn-danger\" onClick={this.handleRemove}>Smazat</button>\n                                    </td>\n                                </tr>\n                                );\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './App.module.css';\nimport Filter from \"../Filter/Filter\";\nimport List from \"../List/List\";\nimport {callApi, parse} from '../../api';\nimport Form from \"../Form/Form\";\nimport Detail from \"../Detail/Detail\";\n\nimport {\n    BrowserRouter as Router,\n    Link,\n    Route,\n    Switch,\n} from 'react-router-dom';\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            foods: [],\n            go: \"\"\n        }\n        callApi(\"/\").then(data => {this.setState({go: parse(data)})})\n    }\n\n    /*load =()=> {\n        getFoods().then( data => {\n            this.setState({foods: data});\n            }\n        )\n    }*/\n\n    render(){\n        return(\n            <Router>\n                <h1>{this.state.go}</h1>\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample03\"\n                            aria-controls=\"navbarsExample03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarsExample03\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item active\">\n                                <Link className=\"nav-link\" to=\"/list/polevka\">Polévky</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/list/hlavní\">Hlavní chody</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/list/dezerty\">Dezerty</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/add\">Vytvořit nový</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/list\">Seznam</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n\n                <div className=\"container mt-5\">\n                    <Switch>\n                        <Route path=\"/add\" component={Form} />\n                        <Route path=\"/edit/:name\" component={Form} />\n                        <Route path=\"/list/:category\" component={List}/>\n                        <Route path=\"/detail/:name\" component={Detail}/>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from \"./components/Home/Home\";\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n        <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}