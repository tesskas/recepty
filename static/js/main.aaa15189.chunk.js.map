{"version":3,"sources":["components/List/List.module.css","components/FilterItem/FilterItem.module.css","serviceWorker.js","api.js","components/FilterItem/FilterItem.js","components/Filter/Filter.js","components/List/List.js","components/IngredienceFormGroup/IngredienceFormGroup.js","components/StepFormGroup/StepFormGroup.js","components/Form/Form.js","components/Detail/Detail.js","components/App/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","parse","data","JSON","content","callApi","path","a","fetch","response","json","getFoods","name","getByCategory","categories","filter","d","includes","Category","getFilterList","FilterItem","props","choice","React","createRef","area","showChoice","bind","hideChoice","e","classlist","this","current","classList","contains","remove","add","category","ingredience","f","document","getElementsByClassName","Array","prototype","slice","call","getElementsByTagName","checked","map","getAttribute","then","len","length","n","forEach","i","Ingrediences","x","Name","getByIngredience","update","ref","type","placeholder","onClick","id","className","styles","list","item","key","data-name","onChange","Component","Filter","load","state","ingrediences","search","List","handleRemove","foods","params","console","log","setState","removeFood","target","prevProps","scope","undefined","Description","to","IngredienceFormGroup","index","handleChange","data-id","value","Amount","Unit","icon","faTimes","defaultProps","StepFormGroup","step","Form","handleSubmit","handleSave","handleChangeIngredience","handleChangeStep","addIngredienceField","removeIngredienceField","addStepField","removeStepField","obj","localStorage","getItem","food","description","steps","Steps","preventDefault","message","sendFormData","history","push","parseInt","amount","unit","splice","desc","pop","exist","setTimeout","stringify","requestOptions","method","headers","body","toString","s","Desc","faPlus","faMinus","Detail","getDetail","setItem","App","basename","data-toggle","data-target","aria-controls","aria-expanded","aria-label","component","exact","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,YAAc,4B,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,6B,2ICWPC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0FClBOC,EAAQ,SAACC,GAClB,OAAOC,KAAKF,MAAMC,EAAKE,UAGpB,SAAeC,EAAtB,kC,4CAAO,WAAuBC,GAAvB,iBAAAC,EAAA,sEACkBC,MAAM,2CAA6CF,GADrE,cACCG,EADD,gBAEcA,EAASC,OAFvB,cAECR,EAFD,yBAGIA,GAHJ,4C,sBAOA,SAAeS,IAAtB,+B,4CAAO,4BAAAJ,EAAA,sEACcF,EAAQ,SADtB,cACCH,EADD,yBAEID,EAAMC,IAFV,4C,kEAKA,WAAyBU,GAAzB,eAAAL,EAAA,sEACcF,EAAQ,WAAYO,GADlC,cACCV,EADD,yBAEID,EAAMC,IAFV,4C,sBAcA,SAASW,EAAcX,EAAMY,GAChC,OAAOZ,EAAKa,QAAO,SAAAC,GACf,OAAGF,EAAWG,SAASD,EAAEE,UACdF,EACJ,Q,4CAkBR,WAA0BJ,GAA1B,eAAAL,EAAA,sEACcF,EAAQ,WAAYO,GADlC,cACCV,EADD,yBAEIA,GAFJ,4C,sBAKA,SAAeiB,EAAtB,kC,4CAAO,WAA6BP,GAA7B,eAAAL,EAAA,sEACcF,EAAQ,WAAaO,GADnC,cACCV,EADD,yBAEIA,EAAKE,SAFT,4C,2CCkBQgB,E,kDAtEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,OAASC,IAAMC,YACpB,EAAKC,KAAOF,IAAMC,YAClB,EAAKE,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKZ,OAAS,EAAKA,OAAOY,KAAZ,gBANC,E,uDAgBRE,GACP,IAAMC,EAAYC,KAAKT,OAAOU,QAAQC,UACnCH,EAAUI,SAAS,aAClBJ,EAAUK,OAAO,aAEjBJ,KAAKH,WAAWC,K,iCAGbA,GACPE,KAAKhB,OAAOc,GACZE,KAAKT,OAAOU,QAAQC,UAAUG,IAAI,e,6BAG/BP,GAAG,IAEFQ,EAAUC,EAFT,OACDC,EAAIC,SAASC,uBAAuB,UAExCJ,EAAWK,MAAMC,UAAUC,MAAMC,KAAKN,EAAE,GAAGO,qBAAqB,UAAU/B,QAAO,SAAAc,GAAC,OAAIA,EAAEkB,WAASC,KAAI,SAAAnB,GAAC,OAAIA,EAAEoB,aAAa,gBACzHX,EAAcI,MAAMC,UAAUC,MAAMC,KAAKN,EAAE,GAAGO,qBAAqB,UAAU/B,QAAO,SAAAc,GAAC,OAAIA,EAAEkB,WAASC,KAAI,SAAAnB,GAAC,OAAIA,EAAEoB,aAAa,gBAC5HtC,IAAWuC,MAAK,SAAAhD,GAQZ,OALiB,OAAbmC,IACAnC,EAAOW,EAAcX,EAAMmC,IACX,OAAhBC,IACApC,EDPT,SAA0BA,EAAMoC,GACnC,IAAIa,EAAMb,EAAYc,OACtB,OAAOlD,EAAKa,QAAO,SAAAC,GACf,IAAIqC,EAAI,EAKR,OAJAf,EAAYgB,SAAQ,SAAAC,GACbvC,EAAEwC,aAAaR,KAAI,SAAAS,GAAC,OAAIA,EAAEC,QAAMzC,SAASsC,IACxCF,OAELA,IAAMF,EACEnC,EACJ,QCHQ2C,CAAiBzD,EAAMoC,IAClC,EAAKjB,MAAMuC,OAAO1D,GACXA,O,+BAIL,IAAD,OACL,OACI,yBAAK2D,IAAK9B,KAAKN,MACX,2BAAOqC,KAAK,OAAOC,YAAahC,KAAKV,MAAMT,KAAMoD,QAASjC,KAAKL,aAC3D,yBAAKuC,GAAG,SAASC,UAAWC,IAAO7C,OAAS,oBAAqBuC,IAAK9B,KAAKT,QAE/C,OAApBS,KAAKV,MAAM+C,MACXrC,KAAKV,MAAM+C,KAAKpB,KAAI,SAACqB,EAAKZ,GACtB,OACI,yBAAKa,IAAKb,EAAGS,UAAU,cACnB,2BAAOK,YAAWF,EAAMP,KAAK,WAAWI,UAAU,mBAAmBM,SAAU,EAAKzD,SACpF,2BAAOmD,UAAU,oBAAoBG,OAMrD,4BAAQH,UAAU,6CAA6CF,QAASjC,KAAKH,YAA7E,kB,GAhECL,IAAMkD,WCwChBC,E,kDAvCX,WAAYrD,GAAO,IAAD,8BACd,cAAMA,IACDsD,KAAO,EAAKA,KAAKhD,KAAV,gBACZ,EAAKiD,MAAQ,CACT9D,WAAY,EAAKO,MAAMgB,SACvBwC,aAAc,IAElB,EAAKF,OAPS,E,mDAUX,IAAD,OACFxD,EAAc,YAAY+B,MAAM,SAAAhD,GAAI,OAAI,EAAK0E,MAAQ,CAAC9D,WAAYZ,MAClEiB,EAAc,eAAe+B,MAAM,SAAAhD,GAAI,OAAI,EAAK0E,MAAQ,CAACC,aAAc3E,Q,+BAIvE,OACI,yBAAKgE,UAAU,QACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,2BAAOJ,KAAK,OAAOC,YAAY,cAEnC,yBAAKG,UAAU,SACX,kBAAC,EAAD,CAAYE,KAAMrC,KAAK6C,MAAM9D,WAAY8C,OAAQ7B,KAAKV,MAAMuC,OAAQhD,KAAK,eAE7E,yBAAKsD,UAAU,SACX,kBAAC,EAAD,CAAYE,KAAMrC,KAAK6C,MAAMC,aAAcjB,OAAQ7B,KAAKV,MAAMuC,OAAQhD,KAAK,kBAGnF,yBAAKsD,UAAU,OACX,yBAAKA,UAAU,SACX,4BAAQA,UAAU,8BAA8BF,QAASjC,KAAKV,MAAMyD,QAApE,mB,GAhCHvD,IAAMkD,WCqFZM,E,kDAlFX,WAAY1D,GAAQ,IAAD,8BACf,cAAMA,IAED2D,aAAe,EAAKA,aAAarD,KAAlB,gBACpB,EAAKgD,KAAO,EAAKA,KAAKhD,KAAV,gBACZ,EAAKiC,OAAS,EAAKA,OAAOjC,KAAZ,gBAEd,EAAKiD,MAAQ,CAAEK,MAAO,IACtB,EAAKN,OARU,E,mDAWZ,IAAD,OACFhE,IACKuC,MAAK,SAAAhD,GACF,OAAOW,EAAcX,EAAM,EAAKmB,MAAMrB,MAAMkF,OAAO7C,aAEtDa,MAAM,SAAAhD,GACHiF,QAAQC,IAAIlF,GACZ,EAAKmF,SAAS,CAAEJ,MAAO/E,S,mCAItB2B,IHuBV,SAAP,2BGtBQyD,CAAWzD,EAAE0D,OAAOtC,aAAa,cACjClB,KAAK4C,S,6BAGFzE,M,yCAIYsF,GACXzD,KAAKV,MAAMvB,WAAa0F,EAAU1F,UAClCiC,KAAK4C,S,+BAIJ,IAAD,OACJ,OACI,6BACI,kBAAC,EAAD,CAAQtC,SAAU,CAAC,WAAYuB,OAAQ7B,KAAK6B,SAC5C,2BAAOM,UAAU,SACb,2BAAOA,UAAU,cACjB,4BACI,wBAAIuB,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,UAGd,+BAEwB,MAApB1D,KAAK6C,MAAMK,OACXlD,KAAK6C,MAAMK,MAAMjC,KAAI,SAACT,EAAEkB,GACpB,OACI,wBAAIa,IAAKb,GACL,4BAAKlB,EAAEmB,MACP,4BAAKnB,EAAErB,UACP,4BACI,yBAAKgD,UAAU,yBAEYwB,IAAnBnD,EAAEiB,cACFjB,EAAEiB,aAAaR,KAAI,SAACO,EAAEE,GAAH,OAAS,2BAAOa,IAAKb,EAAGS,UAAWC,IAAO7B,YAAc,oBAAqBiB,EAAEG,WAI9G,4BAAKnB,EAAEoD,aACP,4BACI,kBAAC,IAAD,CAAMC,GAAE,kBAAarD,EAAEmB,MAAQQ,UAAU,+BAAzC,UACA,4BAAQK,YAAWhC,EAAEmB,KAAMQ,UAAU,wBAAwBF,QAAS,EAAKgB,cAA3E,sB,GAvErBzD,IAAMkD,W,gBCFnBoB,EAAuB,SAAC,GAAgD,IAA/CvD,EAA8C,EAA9CA,YAAawD,EAAiC,EAAjCA,MAAO3D,EAA0B,EAA1BA,OAAQ4D,EAAkB,EAAlBA,aACvD,OACA,yBAAK7B,UAAU,kBACX,2BAAOJ,KAAK,OAAOI,UAAU,qBAAqBH,YAAY,WAAQiC,UAASF,EAAOlF,KAAK,OAAOqF,MAAO3D,EAAYoB,KAAMc,SAAUuB,IACrI,2BAAOjC,KAAK,OAAOI,UAAU,qBAAqBH,YAAY,mBAAWiC,UAASF,EAAOlF,KAAK,SAASqF,MAAO3D,EAAY4D,OAAQ1B,SAAUuB,IAC5I,4BAAQ7B,UAAU,qBAAqB8B,UAASF,EAAOlF,KAAK,OAAO4D,SAAUuB,EAAcE,MAAO3D,EAAY6D,MAC1G,iCACA,qCACA,sCACA,sCACA,sCACA,qCACA,mDACA,iDACA,qDAEJ,4BAAQlC,GAAI6B,EAAO5B,UAAU,oBAAoBF,QAAS7B,GAAQ,kBAAC,IAAD,CAAiB8B,GAAI6B,EAAOM,KAAMC,SAO5GR,EAAqBS,aAAe,GAErBT,QC3BTU,EAAgB,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMvC,EAAsB,EAAtBA,GAAI8B,EAAkB,EAAlBA,aAC9B,OACA,yBAAK7B,UAAU,cACX,uCAAaD,EAAG,GAChB,8BAAU+B,UAAS/B,EAAIrD,KAAK,OAAOqF,MAAOO,EAAMtC,UAAU,eAAeM,SAAUuB,MAM3FQ,EAAcD,aAAe,GAEdC,QCgLAE,E,kDAvLX,WAAYpF,GAAO,IAAD,EAYd,GAZc,qBACd,cAAMA,IACDqF,aAAe,EAAKA,aAAa/E,KAAlB,gBACpB,EAAKgF,WAAa,EAAKA,WAAWhF,KAAhB,gBAClB,EAAKoE,aAAe,EAAKA,aAAapE,KAAlB,gBACpB,EAAKiF,wBAA0B,EAAKA,wBAAwBjF,KAA7B,gBAC/B,EAAKkF,iBAAmB,EAAKA,iBAAiBlF,KAAtB,gBACxB,EAAKmF,oBAAsB,EAAKA,oBAAoBnF,KAAzB,gBAC3B,EAAKoF,uBAAyB,EAAKA,uBAAuBpF,KAA5B,gBAC9B,EAAKqF,aAAe,EAAKA,aAAarF,KAAlB,gBACpB,EAAKsF,gBAAkB,EAAKA,gBAAgBtF,KAArB,gBAEpB,EAAKN,MAAMrB,MAAMM,KAAKW,SAAS,QAAQ,CACtC,IAAIiG,EAAM/G,KAAKF,MAAMkH,aAAaC,QAAQ,WAC1C,EAAKxC,MAAQ,CACTyC,KAAM,CACFzG,KAAMsG,EAAIxD,KACVrB,SAAU6E,EAAIhG,SACdoG,YAAaJ,EAAIvB,YACjBd,aAAmC,MAApBqC,EAAI1D,aAAuB0D,EAAI1D,aAAe,GAC7D+D,MAAoB,MAAbL,EAAIM,MAAgBN,EAAIM,MAAQ,UAK/C,EAAK5C,MAAQ,CACTyC,KAAM,CACFzG,KAAM,GACNyB,SAAU,GACViF,YAAa,GACbzC,aAAe,GACf0C,MAAO,KA/BL,S,yDAoCL1F,GACTA,EAAE4F,iBACF1F,KAAKsD,SAAS,CAAEqC,QAAS,cAAgB3F,KAAK4F,cAAa,IAC3D5F,KAAKV,MAAMuG,QAAQC,KAAK,W,iCAEjBhG,GACPA,EAAE4F,iBACF1F,KAAKsD,SAAS,CAAEqC,QAAS,cAAgB3F,KAAK4F,cAAa,IAC3D5F,KAAKV,MAAMuG,QAAQC,KAAK,W,mCAEfhG,GACTsD,QAAQC,IAAIvD,EAAE0D,OAAO3E,MACrB,IAAI2B,EAAIR,KAAK6C,MAAMyC,KACnB9E,EAAEV,EAAE0D,OAAO3E,MAAQiB,EAAE0D,OAAOU,MAC5BlE,KAAKsD,SAAS,CAACgC,KAAM9E,M,8CAEDV,GACpB,IAAIU,EAAIR,KAAK6C,MAAMyC,KACfpD,EAAK6D,SAASjG,EAAE0D,OAAOtC,aAAa,YACxCV,EAAEsC,aAAaZ,GAAIpC,EAAE0D,OAAO3E,MAAQiB,EAAE0D,OAAOU,MAC7ClE,KAAKsD,SAAS,CAACgC,KAAM9E,M,uCAERV,GACb,IAAIU,EAAIR,KAAK6C,MAAMyC,KACfpD,EAAK6D,SAASjG,EAAE0D,OAAOtC,aAAa,YACxCV,EAAEgF,MAAMtD,GAAR,KAAsBpC,EAAE0D,OAAOU,MAC/BlE,KAAKsD,SAAS,CAACgC,KAAM9E,M,0CAGLV,GAChB,IAAIU,EAAIR,KAAK6C,MAAMyC,KACnB9E,EAAEsC,aAAagD,KAAK,CAACjH,KAAM,GAAImH,OAAO,GAAIC,KAAM,KAChDjG,KAAKsD,SAAS,CAACgC,KAAM9E,M,6CAEFV,GACnBsD,QAAQC,IAAIvD,EAAE0D,OAAOtB,IACrB,IAAI1B,EAAIR,KAAK6C,MAAMyC,KACnB9E,EAAEsC,aAAaoD,OAAOH,SAASjG,EAAE0D,OAAOtB,IAAK,GAC7ClC,KAAKsD,SAAS,CAACgC,KAAM9E,M,mCAGZV,GACT,IAAIU,EAAIR,KAAK6C,MAAMyC,KACnB9E,EAAEgF,MAAMM,KAAK,CAACK,KAAK,KACnBnG,KAAKsD,SAAS,CAACgC,KAAM9E,M,sCAETV,GACZ,IAAIU,EAAIR,KAAK6C,MAAMyC,KACnB9E,EAAEgF,MAAMY,MACRpG,KAAKsD,SAAS,CAACgC,KAAM9E,M,mCAGZ6F,GAAQ,IAAD,OAChBC,WAAU,sBAAC,kCAAA9H,EAAA,yDACP,EAAK8E,SAAS,CAAEqC,QAAS,eACrBR,EAAM/G,KAAKmI,UAAU,EAAK1D,MAAMyC,MACpClC,QAAQC,IAAI,SAAW8B,GACjBqB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMxB,IAEKkB,EATR,iCASqB5H,MAAM,UAAW+H,GATtC,4DAS+D/H,MAAM,OAAQ+H,GAT7E,mCASH9H,EATG,eAUUA,EAASC,OAVnB,eAUHR,EAVG,yBAWAA,GAXA,4CAYR,O,+BAGE,IAAD,OACAoC,EAAc,GAAIiF,EAAQ,GAQ9B,YAPoC7B,IAAjC3D,KAAK6C,MAAMyC,KAAKxC,eACfvC,EAAcP,KAAK6C,MAAMyC,KAAKxC,aAAa7B,KAAK,SAACO,EAAEE,GAAH,OAC5C,kBAAC,EAAD,CAAsBnB,YAAaiB,EAAGuC,MAAOrC,EAAEkF,WAAYxG,OAAQ,EAAK4E,uBAAwBhB,aAAc,EAAKa,mCAE9FlB,IAA1B3D,KAAK6C,MAAMyC,KAAKE,QACfA,EAAQxF,KAAK6C,MAAMyC,KAAKE,MAAMvE,KAAI,SAAC4F,EAAErF,GAAQ,OAAO,kBAAC,EAAD,CAAeiD,KAAMoC,EAAEC,KAAM5E,GAAIV,EAAGwC,aAAc,EAAKc,uBAG/G,6BACQ,yBAAK3C,UAAU,kBACX,2BAAOA,UAAU,SAAjB,YACA,yBAAKA,UAAU,UACX,2BAAOJ,KAAK,OAAOI,UAAU,eAAetD,KAAK,OAAO4D,SAAUzC,KAAKgE,aAAcE,MAAOlE,KAAK6C,MAAMyC,KAAKzG,SAIpH,8BAAUsD,UAAU,cAChB,yBAAKA,UAAU,OACX,4BAAQA,UAAU,gCAAlB,UACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,2BAAOA,UAAU,mBAAmBJ,KAAK,QAAQlD,KAAK,WAAWqF,MAAM,aAAWzB,SAAUzC,KAAKgE,aAC1FhD,QAAsC,eAA7BhB,KAAK6C,MAAMyC,KAAKhF,WAChC,2BAAO6B,UAAU,oBAAjB,eAEJ,yBAAKA,UAAU,cACX,2BAAOA,UAAU,mBAAmBJ,KAAK,QAAQlD,KAAK,WAAWqF,MAAM,YAAUzB,SAAUzC,KAAKgE,aACzFhD,QAAsC,cAA7BhB,KAAK6C,MAAMyC,KAAKhF,WAChC,2BAAO6B,UAAU,oBAAjB,mBAEJ,yBAAKA,UAAU,cACX,2BAAOA,UAAU,mBAAmBJ,KAAK,QAAQlD,KAAK,WAAWqF,MAAM,SAASzB,SAAUzC,KAAKgE,aACxFhD,QAAsC,WAA7BhB,KAAK6C,MAAMyC,KAAKhF,WAChC,2BAAO6B,UAAU,oBAAjB,cAMhB,yBAAKA,UAAU,kBACX,2BAAOA,UAAU,SAAjB,SACA,yBAAKA,UAAU,UACX,2BAAOJ,KAAK,OAAOI,UAAU,eAAetD,KAAK,cAAc4D,SAAUzC,KAAKgE,aAAcE,MAAOlE,KAAK6C,MAAMyC,KAAKC,gBAI3H,yBAAKpD,UAAU,OACX,yBAAKA,UAAU,SACX,4CACC5B,EACD,4BAAQ4B,UAAU,sBAAsBF,QAASjC,KAAK+E,qBAClD,kBAAC,IAAD,CAAiBV,KAAM0C,QAG/B,yBAAK5E,UAAU,SACX,uCACCqD,EACD,yBAAKrD,UAAU,cACX,4BAAQA,UAAU,iBAAiBF,QAASjC,KAAKkF,iBAC7C,kBAAC,IAAD,CAAiBb,KAAM2C,OAE3B,4BAAQ7E,UAAU,kBAAkBF,QAASjC,KAAKiF,cAC9C,kBAAC,IAAD,CAAiBZ,KAAM0C,UAK1C/G,KAAKV,MAAMrB,MAAMM,KAAKW,SAAS,QAC5B,4BAAQ6C,KAAK,SAASI,UAAU,kBAAkBF,QAASjC,KAAK4E,YAAhE,eAEA,4BAAQ7C,KAAK,SAASI,UAAU,kBAAkBF,QAASjC,KAAK2E,cAAhE,sB,GAjLGnF,IAAMkD,WC2CVuE,E,kDA5CX,WAAY3H,GAAQ,IAAD,8BACf,cAAMA,IACDuD,MAAQ,CACTyC,KAAM,IAEV,EAAK1C,KAAO,EAAKA,KAAKhD,KAAV,gBACZ,EAAKgD,OANU,E,mDASZ,IAAD,QPEH,SAAP,mCODQsE,CAAUlH,KAAKV,MAAMrB,MAAMkF,OAAOtE,MAAMsC,MAAK,SAAAhD,GACrC,EAAKmF,SAAS,CAACgC,KAAMnH,IACrBiH,aAAa+B,QAAQ,SAAU/I,KAAKmI,UAAUpI,S,+BAKtD,OACE,6BACI,4BAAK6B,KAAK6C,MAAMyC,KAAK3D,MACrB,4BAAK3B,KAAK6C,MAAMyC,KAAKnG,UACrB,2BAAIa,KAAK6C,MAAMyC,KAAK1B,aACpB,iCAEyCD,IAAjC3D,KAAK6C,MAAMyC,KAAKxC,cAChB9C,KAAK6C,MAAMyC,KAAKxC,aAAa7B,KAAI,SAAAO,GAAC,OAChC,0CAIV,iCAEkCmC,IAA1B3D,KAAK6C,MAAMyC,KAAKE,OAChBxF,KAAK6C,MAAMyC,KAAKE,MAAMvE,KAAI,SAAA4F,GAAC,OACvB,qCAIZ,kBAAC,IAAD,CAAMhD,GAAE,gBAAW7D,KAAK6C,MAAMyC,KAAK3D,MAAQQ,UAAU,+BAArD,gB,GAvCO3C,IAAMkD,W,OCkDZ0E,E,kDA/CX,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IACDuD,MAAQ,CACTK,MAAO,IAHI,E,qDAQf,OACI,kBAAC,IAAD,CAAYmE,SAAS,KACjB,yBAAKlF,UAAU,+CACX,4BAAQA,UAAU,iBAAiBJ,KAAK,SAASuF,cAAY,WAAWC,cAAY,oBAC5EC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,qBACtE,0BAAMvF,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2BD,GAAG,oBACzC,wBAAIC,UAAU,sBACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAW0B,GAAG,iBAA9B,eAEJ,wBAAI1B,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAW0B,GAAG,mBAA9B,oBAEJ,wBAAI1B,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAW0B,GAAG,iBAA9B,YAEJ,wBAAI1B,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAW0B,GAAG,QAA9B,6BAMhB,yBAAK1B,UAAU,kBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO5D,KAAK,OAAOoJ,UAAWjD,IAC9B,kBAAC,IAAD,CAAOnG,KAAK,cAAcoJ,UAAWjD,IACrC,kBAAC,IAAD,CAAOkD,OAAK,EAACrJ,KAAK,kBAAkBoJ,UAAW3E,IAC/C,kBAAC,IAAD,CAAOzE,KAAK,gBAAgBoJ,UAAWV,W,GAxC7CzH,IAAMkD,W,MCCxBmF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACM,kBAAC,EAAD,OAENtH,SAASuH,eAAe,SVwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhH,MAAK,SAAAiH,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnF,QAAQmF,MAAMA,EAAM5C,c","file":"static/js/main.aaa15189.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredience\":\"List_ingredience__3ubC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"choice\":\"FilterItem_choice__2ANem\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const parse = (data) => {\r\n    return JSON.parse(data.content)\r\n}\r\n\r\nexport async function callApi(path){\r\n    let response = await fetch(\"https://damp-springs-19376.herokuapp.com\" + path);\r\n    let data = await response.json()\r\n    return data;\r\n}\r\n\r\n/** Geters **/\r\nexport async function getFoods(){\r\n    let data = await callApi(\"/food\");\r\n    return parse(data);\r\n}\r\n\r\nexport async function getDetail(name){\r\n    let data = await callApi(\"/detail/\"+ name);\r\n    return parse(data);\r\n}\r\n\r\n/**Filter functions **/\r\n\r\nexport function getByName(data, name){\r\n    return data.forEach( d => {\r\n        if(d.Name === name)\r\n            return d;\r\n    })\r\n}\r\n\r\nexport function getByCategory(data, categories){\r\n    return data.filter(d => {\r\n        if(categories.includes(d.Category))\r\n            return d;\r\n        return null;\r\n    })\r\n}\r\n\r\nexport function getByIngredience(data, ingredience){\r\n    let len = ingredience.length;\r\n    return data.filter(d => {\r\n        var n = 0;\r\n        ingredience.forEach(i => {\r\n            if(d.Ingrediences.map(x => x.Name).includes(i))\r\n                n++;\r\n        })\r\n        if(n === len)\r\n            return d;\r\n        return null;\r\n    })\r\n}\r\n\r\nexport async function removeFood(name){\r\n    let data = await callApi(\"/delete/\"+ name);\r\n    return data;\r\n}\r\n\r\nexport async function getFilterList(name){\r\n    let data = await callApi(\"/filter/\" + name)\r\n    return data.content;\r\n}\r\n","import React from 'react';\r\nimport styles from './FilterItem.module.css';\r\nimport {getByCategory, getByName, getByIngredience, getFoods} from \"../../api\";\r\n\r\nclass FilterItem extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.choice = React.createRef();\r\n        this.area = React.createRef();\r\n        this.showChoice = this.showChoice.bind(this);\r\n        this.hideChoice = this.hideChoice.bind(this);\r\n        this.filter = this.filter.bind(this);\r\n    }\r\n\r\n    /*componentDidMount() {\r\n        document.addEventListener('mouseover', (e) => {\r\n            if(this.area && !this.area.current.contains(e.target))\r\n                this.hideChoice(e);\r\n        });\r\n    }*/\r\n\r\n    showChoice(e){\r\n        const classlist = this.choice.current.classList\r\n        if(classlist.contains(\"invisible\"))\r\n            classlist.remove(\"invisible\");\r\n        else\r\n            this.hideChoice(e);\r\n    }\r\n\r\n    hideChoice(e){\r\n        this.filter(e);\r\n        this.choice.current.classList.add(\"invisible\");\r\n    }\r\n\r\n    filter(e){\r\n        let f = document.getElementsByClassName(\"filter\");\r\n        let category, ingredience, name = null;\r\n        category = Array.prototype.slice.call(f[0].getElementsByTagName(\"input\")).filter(e => e.checked).map(e => e.getAttribute(\"data-name\"));\r\n        ingredience = Array.prototype.slice.call(f[1].getElementsByTagName(\"input\")).filter(e => e.checked).map(e => e.getAttribute(\"data-name\"));\r\n        getFoods().then(data => {\r\n            if (name !== null)\r\n                data = getByName(data, name);\r\n            if (category !== null)\r\n                data = getByCategory(data, category);\r\n            if (ingredience !== null)\r\n                data = getByIngredience(data, ingredience);\r\n            this.props.update(data);\r\n            return data;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.area}>\r\n                <input type=\"text\" placeholder={this.props.name} onClick={this.showChoice}/>\r\n                    <div id=\"filter\" className={styles.choice + \" invisible filter\"} ref={this.choice}>\r\n                        {\r\n                            this.props.list !== null &&\r\n                            this.props.list.map((item,x) => {\r\n                                return(\r\n                                    <div key={x} className=\"form-check\">\r\n                                        <input data-name={item} type=\"checkbox\" className=\"form-check-input\" onChange={this.filter}/>\r\n                                        <label className=\"form-check-label\">{item}</label>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        <button className=\"btn btn-sm btn-outline-success float-right\" onClick={this.hideChoice}>Zobrazit</button>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterItem;\r\n","import React from 'react';\r\nimport FilterItem from \"../FilterItem/FilterItem\";\r\nimport {getFilterList} from \"../../api\";\r\n\r\nclass Filter extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.load = this.load.bind(this);\r\n        this.state = {\r\n            categories: this.props.category,\r\n            ingrediences: []\r\n        }\r\n        this.load();\r\n    }\r\n\r\n    load(){\r\n        getFilterList(\"category\").then( data => this.state = {categories: data});\r\n        getFilterList(\"ingredience\").then( data => this.state = {ingrediences: data});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"my-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <input type=\"text\" placeholder=\"Název\"/>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <FilterItem list={this.state.categories} update={this.props.update} name=\"Kategorie\"/>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <FilterItem list={this.state.ingrediences} update={this.props.update} name=\"Ingredience\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <button className=\"btn btn-sm btn-success mt-3\" onClick={this.props.search}>Vyhledat</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport styles from './List.module.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {getByCategory, getFoods, removeFood} from \"../../api\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nclass List extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.load = this.load.bind(this);\r\n        this.update = this.update.bind(this);\r\n\r\n        this.state = { foods: []}\r\n        this.load();\r\n    }\r\n\r\n    load(){\r\n        getFoods()\r\n            .then(data => {\r\n                return getByCategory(data, this.props.match.params.category);\r\n            })\r\n            .then( data => {\r\n                console.log(data)\r\n                this.setState({ foods: data})\r\n            });\r\n    }\r\n\r\n    handleRemove(e){\r\n        removeFood(e.target.getAttribute(\"data-name\"));\r\n        this.load();\r\n    }\r\n\r\n    update(data){\r\n        //this.setState({foods: data})\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Filter category={[\"dezerty\"]} update={this.update}/>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Název</th>\r\n                        <th scope=\"col\">Kategorie</th>\r\n                        <th scope=\"col\">Ingredience</th>\r\n                        <th scope=\"col\">Popis</th>\r\n                        <th scope=\"col\"></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.foods != null &&\r\n                        this.state.foods.map((f,x) => {\r\n                            return(\r\n                                <tr key={x}>\r\n                                    <td>{f.Name}</td>\r\n                                    <td>{f.Category}</td>\r\n                                    <td>\r\n                                        <div className=\"ingredience-list\">\r\n                                            {\r\n                                                f.Ingrediences !== undefined &&\r\n                                                f.Ingrediences.map((i,x) => <label key={x} className={styles.ingredience + \" btn-sm btn-info\"}>{i.Name}</label>)\r\n                                            }\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>{f.Description}</td>\r\n                                    <td>\r\n                                        <Link to={`/detail/${f.Name}`} className=\"btn btn-sm btn-outline-dark\">Detail</Link>\r\n                                        <button data-name={f.Name} className=\"btn btn-sm btn-danger\" onClick={this.handleRemove}>Smazat</button>\r\n                                    </td>\r\n                                </tr>\r\n                                );\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default List;\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst IngredienceFormGroup = ({ingredience, index, remove, handleChange}) => {\r\n    return(\r\n    <div className=\"form-group row\">\r\n        <input type=\"text\" className=\"form-control col-4\" placeholder=\"název\" data-id={index} name=\"Name\" value={ingredience.Name} onChange={handleChange}/>\r\n        <input type=\"text\" className=\"form-control col-3\" placeholder=\"množství\" data-id={index} name=\"Amount\" value={ingredience.Amount} onChange={handleChange}/>\r\n        <select className=\"form-control col-2\" data-id={index} name=\"Unit\" onChange={handleChange} value={ingredience.Unit}>\r\n            <option></option>\r\n            <option>g</option>\r\n            <option>ks</option>\r\n            <option>ml</option>\r\n            <option>dl</option>\r\n            <option>l</option>\r\n            <option>balíček</option>\r\n            <option>lžíce</option>\r\n            <option>lžička</option>\r\n        </select>\r\n        <button id={index} className=\"btn-sm btn-danger\" onClick={remove}><FontAwesomeIcon id={index} icon={faTimes}/></button>\r\n    </div>\r\n    )\r\n};\r\n\r\nIngredienceFormGroup.propTypes = {};\r\n\r\nIngredienceFormGroup.defaultProps = {};\r\n\r\nexport default IngredienceFormGroup;\r\n","import React from 'react';\r\n\r\nconst StepFormGroup = ({step, id, handleChange}) => {\r\n    return(\r\n    <div className=\"form-group\">\r\n        <label>Krok {id+1}</label>\r\n        <textarea data-id={id} name=\"step\" value={step} className=\"form-control\" onChange={handleChange}/>\r\n    </div>)\r\n};\r\n\r\nStepFormGroup.propTypes = {};\r\n\r\nStepFormGroup.defaultProps = {};\r\n\r\nexport default StepFormGroup;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPlus, faMinus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport IngredienceFormGroup from \"../IngredienceFormGroup/IngredienceFormGroup\";\r\nimport StepFormGroup from \"../StepFormGroup/StepFormGroup\";\r\n\r\nclass Form extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeIngredience = this.handleChangeIngredience.bind(this);\r\n        this.handleChangeStep = this.handleChangeStep.bind(this);\r\n        this.addIngredienceField = this.addIngredienceField.bind(this);\r\n        this.removeIngredienceField = this.removeIngredienceField.bind(this);\r\n        this.addStepField = this.addStepField.bind(this);\r\n        this.removeStepField = this.removeStepField.bind(this);\r\n\r\n        if(this.props.match.path.includes(\"edit\")){\r\n            var obj = JSON.parse(localStorage.getItem(\"detail\"));\r\n            this.state = {\r\n                food: {\r\n                    name: obj.Name,\r\n                    category: obj.Category,\r\n                    description: obj.Description,\r\n                    ingrediences:  obj.Ingrediences != null ? obj.Ingrediences : [],\r\n                    steps: obj.Steps != null ? obj.Steps : []\r\n                }\r\n            };\r\n        }\r\n        else\r\n            this.state = {\r\n                food: {\r\n                    name: \"\",\r\n                    category: \"\",\r\n                    description: \"\",\r\n                    ingrediences:  [],\r\n                    steps: []\r\n                }\r\n            };\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ message: 'Sending...' }, this.sendFormData(false));\r\n        this.props.history.push('/list')\r\n    }\r\n    handleSave(e){\r\n        e.preventDefault();\r\n        this.setState({ message: 'Sending...' }, this.sendFormData(true));\r\n        this.props.history.push('/list')\r\n    }\r\n    handleChange(e){\r\n        console.log(e.target.name);\r\n        let f = this.state.food;\r\n        f[e.target.name] = e.target.value;\r\n        this.setState({food: f});\r\n    }\r\n    handleChangeIngredience(e){\r\n        let f = this.state.food;\r\n        let id = parseInt(e.target.getAttribute(\"data-id\"));\r\n        f.ingrediences[id][e.target.name] = e.target.value;\r\n        this.setState({food: f});\r\n    }\r\n    handleChangeStep(e){\r\n        let f = this.state.food;\r\n        let id = parseInt(e.target.getAttribute(\"data-id\"));\r\n        f.steps[id][\"Desc\"] = e.target.value;\r\n        this.setState({food: f});\r\n    }\r\n\r\n    addIngredienceField(e) {\r\n        let f = this.state.food;\r\n        f.ingrediences.push({name: \"\", amount:\"\", unit: \"\"});\r\n        this.setState({food: f});\r\n    }\r\n    removeIngredienceField(e){\r\n        console.log(e.target.id);\r\n        let f = this.state.food;\r\n        f.ingrediences.splice(parseInt(e.target.id), 1);\r\n        this.setState({food: f});\r\n    }\r\n\r\n    addStepField(e){\r\n        let f = this.state.food;\r\n        f.steps.push({desc:\"\"});\r\n        this.setState({food: f});\r\n    }\r\n    removeStepField(e){\r\n        let f = this.state.food;\r\n        f.steps.pop();\r\n        this.setState({food: f});\r\n    }\r\n\r\n    sendFormData(exist) {\r\n        setTimeout(async () => {\r\n            this.setState({ message: 'data sent!' });\r\n            let obj = JSON.stringify(this.state.food);\r\n            console.log(\"BODY: \" + obj)\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: obj\r\n            };\r\n            let response = exist? await fetch(\"/update\", requestOptions) :  await fetch(\"/add\", requestOptions);\r\n            let data = await response.json()\r\n            return data;\r\n        }, 3000);\r\n    }\r\n\r\n    render(){\r\n        let ingredience = [], steps = [];\r\n        if(this.state.food.ingrediences !== undefined)\r\n            ingredience = this.state.food.ingrediences.map( (i,x) =>\r\n                <IngredienceFormGroup ingredience={i} index={x.toString()} remove={this.removeIngredienceField} handleChange={this.handleChangeIngredience}/>\r\n                );\r\n        if(this.state.food.steps !== undefined)\r\n            steps = this.state.food.steps.map((s,i) => { return(<StepFormGroup step={s.Desc} id={i} handleChange={this.handleChangeStep}/>)});\r\n\r\n        return(\r\n        <div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Název</label>\r\n                    <div className=\"col-10\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"Name\" onChange={this.handleChange} value={this.state.food.name}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <fieldset className=\"form-group\">\r\n                    <div className=\"row\">\r\n                        <legend className=\"col-form-label col-sm-2 pt-0\">Radios</legend>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"Category\" value=\"polévka\"  onChange={this.handleChange}\r\n                                       checked={this.state.food.category === \"polévka\"}/>\r\n                                <label className=\"form-check-label\">Polévka</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"Category\" value=\"hlavní\"  onChange={this.handleChange}\r\n                                       checked={this.state.food.category === \"hlavní\"}/>\r\n                                <label className=\"form-check-label\">Hlavní chod</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"Category\" value=\"dezert\" onChange={this.handleChange}\r\n                                       checked={this.state.food.category === \"dezert\"}/>\r\n                                <label className=\"form-check-label\">Dezert</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Popis</label>\r\n                    <div className=\"col-10\">\r\n                        <input type=\"text\" className=\"form-control\" name=\"Description\" onChange={this.handleChange} value={this.state.food.description}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                        <h3>Ingredience:</h3>\r\n                        {ingredience}\r\n                        <button className=\"btn btn-success row\" onClick={this.addIngredienceField}>\r\n                            <FontAwesomeIcon icon={faPlus} />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-7\">\r\n                        <h3>Postup:</h3>\r\n                        {steps}\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-danger\" onClick={this.removeStepField}>\r\n                                <FontAwesomeIcon icon={faMinus} />\r\n                            </button>\r\n                            <button className=\"btn btn-success\" onClick={this.addStepField}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            {this.props.match.path.includes(\"edit\") ?\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSave}>Uložit</button>\r\n                :\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Vytvořit</button>\r\n            }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport {getDetail} from \"../../api\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Detail extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            food: {}\r\n        }\r\n        this.load = this.load.bind(this);\r\n        this.load();\r\n    }\r\n\r\n    load(){\r\n        getDetail(this.props.match.params.name).then(data =>{\r\n                this.setState({food: data});\r\n                localStorage.setItem(\"detail\", JSON.stringify(data));\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>\r\n              <h1>{this.state.food.Name}</h1>\r\n              <h3>{this.state.food.Category}</h3>\r\n              <p>{this.state.food.Description}</p>\r\n              <ul>\r\n                  {\r\n                      this.state.food.ingrediences !== undefined &&\r\n                      this.state.food.ingrediences.map(i =>\r\n                        <li>i.name</li>\r\n                      )\r\n                  }\r\n              </ul>\r\n              <ul>\r\n                  {\r\n                      this.state.food.steps !== undefined &&\r\n                      this.state.food.steps.map(s =>\r\n                          <li>s</li>\r\n                      )\r\n                  }\r\n              </ul>\r\n              <Link to={`/edit/${this.state.food.Name}`} className=\"btn btn-sm btn-outline-dark\">Upravit</Link>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport List from \"../List/List\";\r\nimport Form from \"../Form/Form\";\r\nimport Detail from \"../Detail/Detail\";\r\nimport {BrowserRouter as Router, Link, Switch, Route, HashRouter} from 'react-router-dom';\r\n\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            foods: []\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <HashRouter basename=\"/\">\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample03\"\r\n                            aria-controls=\"navbarsExample03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarsExample03\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <Link className=\"nav-link\" to=\"/list/polevka\">Polévky</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/list/hlavní\">Hlavní chody</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/list/dezerty\">Dezerty</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/add\">Vytvořit nový</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"container mt-5\">\r\n                    <Switch>\r\n                        <Route path=\"/add\" component={Form} />\r\n                        <Route path=\"/edit/:name\" component={Form} />\r\n                        <Route exact path=\"/list/:category\" component={List}/>\r\n                        <Route path=\"/detail/:name\" component={Detail}/>\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"./components/App/App\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n        <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}