{"ast":null,"code":"const parse = data => {\n  return JSON.parse(data.content);\n};\n\nasync function callApi(path) {\n  /*fetch(path)\r\n      .then(async response => {\r\n          const data = await response.json();\r\n          //console.log(\"JSON: \" + data.content);\r\n          return data.content;\r\n      });*/\n  let response = await fetch(path);\n  let data = await response.json();\n  return data;\n}\n\nexport async function getFoods() {\n  let data = await callApi(\"/food\");\n  return parse(data);\n}\nexport async function getDetail(name) {\n  let data = await callApi(\"/detail/\" + name);\n  console.log(data);\n  return parse(data);\n}\nexport function getFilterFoods(name, categories, ingredience) {\n  let data = getFoods();\n  if (name != null) data = getByName(data, name);\n  if (categories != null) data = getByCategory(data, categories); //if (ingredience)\n}\n/**Filter functions */\n\nexport function getByName(data, name) {\n  return data.forEach(d => {\n    if (d.name == name) return d;\n  });\n}\nexport function getByCategory(data, categories) {\n  return data.filter(d => {\n    if (categories.include(d.category)) return d;\n  });\n}\nexport function getByIngredience(data, ingredience) {\n  let len = ingredience.length;\n  return data.filter(d => {\n    var n = 0;\n    ingredience.forEach(i => {\n      if (i.ingrediences.includes(i)) n++;\n    });\n    if (n == len) return d;\n  });\n}\nexport async function removeFood(name) {\n  let data = await callApi(\"/delete/\" + name);\n  return data;\n}","map":{"version":3,"sources":["D:/programky/cook/react/cook/src/api.js"],"names":["parse","data","JSON","content","callApi","path","response","fetch","json","getFoods","getDetail","name","console","log","getFilterFoods","categories","ingredience","getByName","getByCategory","forEach","d","filter","include","category","getByIngredience","len","length","n","i","ingrediences","includes","removeFood"],"mappings":"AAAA,MAAMA,KAAK,GAAIC,IAAD,IAAU;AACpB,SAAOC,IAAI,CAACF,KAAL,CAAWC,IAAI,CAACE,OAAhB,CAAP;AACH,CAFD;;AAGA,eAAeC,OAAf,CAAuBC,IAAvB,EAA4B;AACxB;;;;;;AAMA,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,IAAD,CAA1B;AACA,MAAIJ,IAAI,GAAG,MAAMK,QAAQ,CAACE,IAAT,EAAjB;AACA,SAAOP,IAAP;AACH;;AAED,OAAO,eAAeQ,QAAf,GAAyB;AAC5B,MAAIR,IAAI,GAAG,MAAMG,OAAO,CAAC,OAAD,CAAxB;AACA,SAAOJ,KAAK,CAACC,IAAD,CAAZ;AACH;AAED,OAAO,eAAeS,SAAf,CAAyBC,IAAzB,EAA8B;AACjC,MAAIV,IAAI,GAAG,MAAMG,OAAO,CAAC,aAAYO,IAAb,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,SAAOD,KAAK,CAACC,IAAD,CAAZ;AACH;AAED,OAAO,SAASa,cAAT,CAAwBH,IAAxB,EAA8BI,UAA9B,EAA0CC,WAA1C,EAAsD;AACzD,MAAIf,IAAI,GAAGQ,QAAQ,EAAnB;AACA,MAAIE,IAAI,IAAI,IAAZ,EACIV,IAAI,GAAGgB,SAAS,CAAChB,IAAD,EAAOU,IAAP,CAAhB;AACJ,MAAII,UAAU,IAAI,IAAlB,EACGd,IAAI,GAAGiB,aAAa,CAACjB,IAAD,EAAOc,UAAP,CAApB,CALsD,CAMzD;AACH;AAED;;AAEA,OAAO,SAASE,SAAT,CAAmBhB,IAAnB,EAAyBU,IAAzB,EAA8B;AACjC,SAAOV,IAAI,CAACkB,OAAL,CAAcC,CAAC,IAAI;AACtB,QAAGA,CAAC,CAACT,IAAF,IAAUA,IAAb,EACI,OAAOS,CAAP;AACP,GAHM,CAAP;AAIH;AAED,OAAO,SAASF,aAAT,CAAuBjB,IAAvB,EAA6Bc,UAA7B,EAAwC;AAC3C,SAAOd,IAAI,CAACoB,MAAL,CAAYD,CAAC,IAAI;AACpB,QAAGL,UAAU,CAACO,OAAX,CAAmBF,CAAC,CAACG,QAArB,CAAH,EACI,OAAOH,CAAP;AACP,GAHM,CAAP;AAIH;AAED,OAAO,SAASI,gBAAT,CAA0BvB,IAA1B,EAAgCe,WAAhC,EAA4C;AAC/C,MAAIS,GAAG,GAAGT,WAAW,CAACU,MAAtB;AACA,SAAOzB,IAAI,CAACoB,MAAL,CAAYD,CAAC,IAAI;AACpB,QAAIO,CAAC,GAAG,CAAR;AACAX,IAAAA,WAAW,CAACG,OAAZ,CAAoBS,CAAC,IAAI;AACrB,UAAGA,CAAC,CAACC,YAAF,CAAeC,QAAf,CAAwBF,CAAxB,CAAH,EACID,CAAC;AACR,KAHD;AAIA,QAAGA,CAAC,IAAIF,GAAR,EACI,OAAOL,CAAP;AACP,GARM,CAAP;AASH;AAED,OAAO,eAAeW,UAAf,CAA0BpB,IAA1B,EAA+B;AAClC,MAAIV,IAAI,GAAG,MAAMG,OAAO,CAAC,aAAYO,IAAb,CAAxB;AACA,SAAOV,IAAP;AACH","sourcesContent":["const parse = (data) => {\r\n    return JSON.parse(data.content)\r\n}\r\nasync function callApi(path){\r\n    /*fetch(path)\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            //console.log(\"JSON: \" + data.content);\r\n            return data.content;\r\n        });*/\r\n    let response = await fetch(path);\r\n    let data = await response.json()\r\n    return data;\r\n}\r\n\r\nexport async function getFoods(){\r\n    let data = await callApi(\"/food\");\r\n    return parse(data);\r\n}\r\n\r\nexport async function getDetail(name){\r\n    let data = await callApi(\"/detail/\"+ name);\r\n    console.log(data)\r\n    return parse(data);\r\n}\r\n\r\nexport function getFilterFoods(name, categories, ingredience){\r\n    let data = getFoods();\r\n    if (name != null)\r\n        data = getByName(data, name);\r\n    if (categories != null)\r\n       data = getByCategory(data, categories);\r\n    //if (ingredience)\r\n}\r\n\r\n/**Filter functions */\r\n\r\nexport function getByName(data, name){\r\n    return data.forEach( d => {\r\n        if(d.name == name)\r\n            return d;\r\n    })\r\n}\r\n\r\nexport function getByCategory(data, categories){\r\n    return data.filter(d => {\r\n        if(categories.include(d.category))\r\n            return d;\r\n    })\r\n}\r\n\r\nexport function getByIngredience(data, ingredience){\r\n    let len = ingredience.length;\r\n    return data.filter(d => {\r\n        var n = 0;\r\n        ingredience.forEach(i => {\r\n            if(i.ingrediences.includes(i))\r\n                n++;\r\n        })\r\n        if(n == len)\r\n            return d;\r\n    })\r\n}\r\n\r\nexport async function removeFood(name){\r\n    let data = await callApi(\"/delete/\"+ name);\r\n    return data;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}