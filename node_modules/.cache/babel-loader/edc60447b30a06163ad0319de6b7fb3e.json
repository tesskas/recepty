{"ast":null,"code":"var _jsxFileName = \"D:\\\\programky\\\\cook\\\\react\\\\cook\\\\src\\\\components\\\\List\\\\List.js\";\nimport React from 'react';\nimport styles from './List.module.css';\nimport { Link } from \"react-router-dom\";\nimport { getByCategory, getFoods, removeFood } from \"../../api\";\nimport Filter from \"../Filter/Filter\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.load = this.load.bind(this);\n    this.update = this.update.bind(this);\n    this.state = {\n      foods: []\n    };\n    this.load();\n  }\n\n  load() {\n    getFoods().then(data => {\n      return getByCategory(data, this.props.match.params.category);\n    }).then(data => {\n      this.setState({\n        foods: data\n      });\n    });\n  }\n\n  handleRemove(e) {\n    removeFood(e.target.getAttribute(\"data-name\"));\n    this.load();\n  }\n\n  update(data) {//this.setState({foods: data})\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.load();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      category: [\"dezerty\"],\n      update: this.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, \"N\\xE1zev\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Kategorie\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Ingredience\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Popis\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, this.state.foods != null && this.state.foods.map(f => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, f.Name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, f.Category), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ingredience-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 41\n        }\n      }, f.Ingrediences !== undefined && f.Ingrediences.map(i => /*#__PURE__*/React.createElement(\"label\", {\n        className: styles.ingredience + \" btn-sm btn-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 73\n        }\n      }, i.Name)))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, f.Description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/detail/${f.Name}`,\n        className: \"btn btn-sm btn-outline-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, \"Detail\"), /*#__PURE__*/React.createElement(\"button\", {\n        \"data-name\": f.Name,\n        className: \"btn btn-sm btn-danger\",\n        onClick: this.handleRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 41\n        }\n      }, \"Smazat\")));\n    }))));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["D:/programky/cook/react/cook/src/components/List/List.js"],"names":["React","styles","Link","getByCategory","getFoods","removeFood","Filter","List","Component","constructor","props","handleRemove","bind","load","update","state","foods","then","data","match","params","category","setState","e","target","getAttribute","componentDidUpdate","prevProps","location","render","map","f","Name","Category","Ingrediences","undefined","i","ingredience","Description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './List.module.css';\nimport {Link} from \"react-router-dom\";\nimport {getByCategory, getFoods, removeFood} from \"../../api\";\nimport Filter from \"../Filter/Filter\";\n\nclass List extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.handleRemove = this.handleRemove.bind(this);\n        this.load = this.load.bind(this);\n        this.update = this.update.bind(this);\n\n        this.state = { foods: []}\n        this.load();\n    }\n\n    load(){\n        getFoods()\n            .then(data => {\n                return getByCategory(data, this.props.match.params.category);\n            })\n            .then( data => {\n                this.setState({foods: data})\n            });\n    }\n\n    handleRemove(e){\n        removeFood(e.target.getAttribute(\"data-name\"));\n        this.load();\n    }\n\n    update(data){\n        //this.setState({foods: data})\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            this.load();\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Filter category={[\"dezerty\"]} update={this.update}/>\n                <table className=\"table\">\n                    <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">Název</th>\n                        <th scope=\"col\">Kategorie</th>\n                        <th scope=\"col\">Ingredience</th>\n                        <th scope=\"col\">Popis</th>\n                        <th scope=\"col\"></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        this.state.foods != null &&\n                        this.state.foods.map(f => {\n                            return(\n                                <tr>\n                                    <td>{f.Name}</td>\n                                    <td>{f.Category}</td>\n                                    <td>\n                                        <div className=\"ingredience-list\">\n                                            {\n                                                f.Ingrediences !== undefined &&\n                                                f.Ingrediences.map(i => <label className={styles.ingredience + \" btn-sm btn-info\"}>{i.Name}</label>)\n                                            }\n                                        </div>\n                                    </td>\n                                    <td>{f.Description}</td>\n                                    <td>\n                                        <Link to={`/detail/${f.Name}`} className=\"btn btn-sm btn-outline-dark\">Detail</Link>\n                                        <button data-name={f.Name} className=\"btn btn-sm btn-danger\" onClick={this.handleRemove}>Smazat</button>\n                                    </td>\n                                </tr>\n                                );\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nexport default List;\n"]},"metadata":{},"sourceType":"module"}