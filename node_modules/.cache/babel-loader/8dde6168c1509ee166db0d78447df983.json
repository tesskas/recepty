{"ast":null,"code":"const parse = data => {\n  return JSON.parse(data.content);\n};\n\nasync function callApi(path) {\n  /*fetch(path)\r\n      .then(async response => {\r\n          const data = await response.json();\r\n          //console.log(\"JSON: \" + data.content);\r\n          return data.content;\r\n      });*/\n  let response = await fetch(path);\n  let data = await response.json();\n  return data;\n}\n/** Geters **/\n\n\nexport async function getFoods() {\n  let data = await callApi(\"/food\");\n  return parse(data);\n}\nexport async function getDetail(name) {\n  let data = await callApi(\"/detail/\" + name);\n  return parse(data);\n}\n/**Filter functions **/\n\nexport function getByName(data, name) {\n  return data.forEach(d => {\n    if (d.Name == name) return d;\n  });\n}\nexport function getByCategory(data, categories) {\n  return data.filter(d => {\n    if (categories.includes(d.Category)) return d;\n  });\n}\nexport function getByIngredience(data, ingredience) {\n  let len = ingredience.length;\n  return data.filter(d => {\n    var n = 0;\n    ingredience.forEach(i => {\n      if (d.Ingrediences.includes(i)) n++;\n    });\n    if (n == len) return d;\n  });\n}\nexport async function removeFood(name) {\n  let data = await callApi(\"/delete/\" + name);\n  return data;\n}\nexport async function getFilterList(name) {\n  let data = await callApi(\"/filter/\" + name);\n  console.log(data.content);\n  return data.content;\n  /*switch(name){\r\n      case \"category\":    return await callApi(\"/filter/category\")\r\n      case \"ingredience\": return await callApi(\"/filter/ingredience\")\r\n  }*/\n}","map":{"version":3,"sources":["D:/programky/cook/react/cook/src/api.js"],"names":["parse","data","JSON","content","callApi","path","response","fetch","json","getFoods","getDetail","name","getByName","forEach","d","Name","getByCategory","categories","filter","includes","Category","getByIngredience","ingredience","len","length","n","i","Ingrediences","removeFood","getFilterList","console","log"],"mappings":"AAAA,MAAMA,KAAK,GAAIC,IAAD,IAAU;AACpB,SAAOC,IAAI,CAACF,KAAL,CAAWC,IAAI,CAACE,OAAhB,CAAP;AACH,CAFD;;AAIA,eAAeC,OAAf,CAAuBC,IAAvB,EAA4B;AACxB;;;;;;AAMA,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,IAAD,CAA1B;AACA,MAAIJ,IAAI,GAAG,MAAMK,QAAQ,CAACE,IAAT,EAAjB;AACA,SAAOP,IAAP;AACH;AAED;;;AACA,OAAO,eAAeQ,QAAf,GAAyB;AAC5B,MAAIR,IAAI,GAAG,MAAMG,OAAO,CAAC,OAAD,CAAxB;AACA,SAAOJ,KAAK,CAACC,IAAD,CAAZ;AACH;AAED,OAAO,eAAeS,SAAf,CAAyBC,IAAzB,EAA8B;AACjC,MAAIV,IAAI,GAAG,MAAMG,OAAO,CAAC,aAAYO,IAAb,CAAxB;AACA,SAAOX,KAAK,CAACC,IAAD,CAAZ;AACH;AAED;;AAEA,OAAO,SAASW,SAAT,CAAmBX,IAAnB,EAAyBU,IAAzB,EAA8B;AACjC,SAAOV,IAAI,CAACY,OAAL,CAAcC,CAAC,IAAI;AACtB,QAAGA,CAAC,CAACC,IAAF,IAAUJ,IAAb,EACI,OAAOG,CAAP;AACP,GAHM,CAAP;AAIH;AAED,OAAO,SAASE,aAAT,CAAuBf,IAAvB,EAA6BgB,UAA7B,EAAwC;AAC3C,SAAOhB,IAAI,CAACiB,MAAL,CAAYJ,CAAC,IAAI;AACpB,QAAGG,UAAU,CAACE,QAAX,CAAoBL,CAAC,CAACM,QAAtB,CAAH,EACI,OAAON,CAAP;AACP,GAHM,CAAP;AAIH;AAED,OAAO,SAASO,gBAAT,CAA0BpB,IAA1B,EAAgCqB,WAAhC,EAA4C;AAC/C,MAAIC,GAAG,GAAGD,WAAW,CAACE,MAAtB;AACA,SAAOvB,IAAI,CAACiB,MAAL,CAAYJ,CAAC,IAAI;AACpB,QAAIW,CAAC,GAAG,CAAR;AACAH,IAAAA,WAAW,CAACT,OAAZ,CAAoBa,CAAC,IAAI;AACrB,UAAGZ,CAAC,CAACa,YAAF,CAAeR,QAAf,CAAwBO,CAAxB,CAAH,EACID,CAAC;AACR,KAHD;AAIA,QAAGA,CAAC,IAAIF,GAAR,EACI,OAAOT,CAAP;AACP,GARM,CAAP;AASH;AAED,OAAO,eAAec,UAAf,CAA0BjB,IAA1B,EAA+B;AAClC,MAAIV,IAAI,GAAG,MAAMG,OAAO,CAAC,aAAYO,IAAb,CAAxB;AACA,SAAOV,IAAP;AACH;AAED,OAAO,eAAe4B,aAAf,CAA6BlB,IAA7B,EAAkC;AACrC,MAAIV,IAAI,GAAG,MAAMG,OAAO,CAAC,aAAaO,IAAd,CAAxB;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY9B,IAAI,CAACE,OAAjB;AACA,SAAOF,IAAI,CAACE,OAAZ;AACA;;;;AAIH","sourcesContent":["const parse = (data) => {\r\n    return JSON.parse(data.content)\r\n}\r\n\r\nasync function callApi(path){\r\n    /*fetch(path)\r\n        .then(async response => {\r\n            const data = await response.json();\r\n            //console.log(\"JSON: \" + data.content);\r\n            return data.content;\r\n        });*/\r\n    let response = await fetch(path);\r\n    let data = await response.json()\r\n    return data;\r\n}\r\n\r\n/** Geters **/\r\nexport async function getFoods(){\r\n    let data = await callApi(\"/food\");\r\n    return parse(data);\r\n}\r\n\r\nexport async function getDetail(name){\r\n    let data = await callApi(\"/detail/\"+ name);\r\n    return parse(data);\r\n}\r\n\r\n/**Filter functions **/\r\n\r\nexport function getByName(data, name){\r\n    return data.forEach( d => {\r\n        if(d.Name == name)\r\n            return d;\r\n    })\r\n}\r\n\r\nexport function getByCategory(data, categories){\r\n    return data.filter(d => {\r\n        if(categories.includes(d.Category))\r\n            return d;\r\n    })\r\n}\r\n\r\nexport function getByIngredience(data, ingredience){\r\n    let len = ingredience.length;\r\n    return data.filter(d => {\r\n        var n = 0;\r\n        ingredience.forEach(i => {\r\n            if(d.Ingrediences.includes(i))\r\n                n++;\r\n        })\r\n        if(n == len)\r\n            return d;\r\n    })\r\n}\r\n\r\nexport async function removeFood(name){\r\n    let data = await callApi(\"/delete/\"+ name);\r\n    return data;\r\n}\r\n\r\nexport async function getFilterList(name){\r\n    let data = await callApi(\"/filter/\" + name)\r\n    console.log(data.content)\r\n    return data.content\r\n    /*switch(name){\r\n        case \"category\":    return await callApi(\"/filter/category\")\r\n        case \"ingredience\": return await callApi(\"/filter/ingredience\")\r\n    }*/\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}